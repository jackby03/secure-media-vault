version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: api/Dockerfile
    container_name: management-stream-media-app-dev
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: development
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/management
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_REDIS_HOST: redis
      SPRING_RABBITMQ_HOST: rabbitmq
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    volumes:
      - applogs:/app/logs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      rabbitmq:
        condition: service_started
      minio:
        condition: service_started
  db:
    image: postgres:15
    container_name: management-stream-media-db
    environment:
      POSTGRES_DB: management
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: management-stream-media-redis
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: management-stream-media-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmqdata:/var/lib/rabbitmq

  minio:
    image: minio/minio:latest
    container_name: management-stream-media-minio
    command: server --console-address ":9001" /data
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - miniodata:/data

  prometheus:
    image: prom/prometheus:latest
    container_name: management-stream-media-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:latest
    container_name: management-stream-media-grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_INSTALL_PLUGINS: grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafanadata:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources

volumes:
  pgdata:
  redisdata:
  rabbitmqdata:
  miniodata:
  grafanadata:
  applogs:
